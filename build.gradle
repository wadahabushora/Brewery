plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.6.8'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'jacoco'
	id "org.sonarqube" version "4.0.0.2929"
}

group = 'com.brewery'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

repositories {
	mavenCentral()
	
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
// report is always generated after tests run
test.finalizedBy jacocoTestReport

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    } // tests are required to run before generating the report
}

sonarqube {
		properties {
				property 'sonar.host.url', 'http://localhost:9000'
			property 'sonar.projectKey','Brewery-Management'
                   property 'sonar.login', 'sqp_a0d5a8208bb53e8e7b32cfe94a9696b7e994e67b'
    property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco.xml"
				        property "sonar.exclusions", "**/*Generated.java"
				
		}
}



